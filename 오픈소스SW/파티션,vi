파티션
연속된 저장 공간을 하나 이상의 연속되고 독립된 영역으로 나누어서 사용할 수 있도록 규정한 규약

(파티션된 부분은 특정 운영체제의 f/s정해서 포멧)
단일 파티션
앞 첫번쨰 섹터에 BR(부트 레코드)가 있다. 컴퓨터키면 이 BR을 메모리에 가지고 와서 실행(부팅과정)
다중 파티션
맨앞 첫번째 섹터에 MBR(마스터 부트 레코드) 있고 이 역활은 파티션 2개중에 어떤거 부팅시킬지 하는 코드 
그뒤에 BR들이 파티션 앞쪽에 와있다(논리적으로 지정해서 같은 운영체제를 C,D로 나눌수 있고 아예 다른 운영체제 넣을 수도 있다)

(MBR과BR이 바로 붙어있지 않고 사용하지 않은 공간이 있어도 상관없음)
MS-DOS에서 하드디스크를 어떻게 나눌까하는 위에 봤듯이 규약을 정함

MBR 영역 내에 파티션 테이블이 있음.
볼륨은 물리적(디스크 큰거)으로나 논리적(디스크안에 세부 파티션)

MBR은 파티션 첫 섹터로 DOS파티션을 사용할 때만 해당
boot code와 파티션 테이블로 나눠짐

애플은 MBR 내의 부트프로그램이 BIOS레벨(ROM 에 존재)의 펌웨어에 존재
하드디스크0번은 사용안함, 파티션 정보는 1번섹터부터 기록
과정
전원 키자마자 BIOS가 실행, 코드가 하드디스크 첫 섹터인 MBR을 메모리에 가져오게 되있다. ->실행 -> 부트코드가 수행되면서 이 코드는 파티션 테이블보고 특정 파티션 BR을 메모리
갖고옴-> BR수행(BR에는 특정 os 부트 코드 들어있다)

MBR구조 중에 맨마지막에 MBR다 읽었는지 검사 하는 Signature코드가 있다(제대로 안읽으면 부팅 안되니까)

DOS 파티션 테이블은 총 4개의 파티션(각 16byte) 있는데 확장 파티션을 이용하여 논리적인 파티션 개수 제한 없앰

애플 파티션 맵
이놈은 0번 사용하지 않고 1번섹터에 파티션 맵 기록, 애플 부트 코드는 BIOS에 기록, 섹터 1개마다 파티션 정보 1개씩

BSD Disk Label
읽어보기

밑의 실습과 vi는 필기 보기
