파일 시스템
바로 디스크에 접근 하지 않고 파일시스템이 디스크 내에 파일 섹터같은거 어딨는지 다 한번에 가지고 있어서 이것만 통하게끔 해놓은거
즉 data에 의한 data라해서 metadata

*기능
파일 생성,제거, 타인과 파일 공동 사용(클라우드 환경 생각하면 될듯 내 혼자 컴퓨터말고 크게 생각해서 전체 운영체제로 생각)
물리적 장치 이름 대신 기호화된 이름 사용( 윈도우에선 c드라이브 리눅스에선 /usr/home, /use/sdal [이러한 폴더를 가면 디스크 access 할 수 있게 제공 이것을 mount라함])
정보의 안전한 보관(사용자 별로 권한,암호화 기능 제공)

*파일 시스템 선택의 필요성
제품과 pc의 호환!, 보안, 성능, 애플리케이션 레벨의 속성(app이 파일시스템 어떻게 다루냐; 보안 기능 사용 유무에 따라서 FAT은 보안 안되고 NTFS는 보안 제공)

pc의 역사를 살펴보면
Apple2 - 세계 최초의 pc(대박) 이놈은 hw,os직접만듬, 이놈에게 도전장을 내민 IBM pc (이놈은 hw의 BIOS만직접 os는 발주, 이때 채택된 os가 microsoft의 DOS이다
여기서 사용된 파일시스템이 FAT이다)
여기서 FAT32의 32의미는 섹터들을 묶은 클러스터를 2의32승개 부여할 수 있다 이런 의미이다.
이놈들도 처음엔 text기반 명령어 이용해 컴퓨터 다루다가 GUI가 나오면서 애플은 맥 IBM은 windows와os2 를 선보였는데
이때 os2의 파일시스템이 HPFS이고 windows가 계발한 파일 시스템이 NTFS이다 (이놈은 journaling 지원, 소유권 가능)

(cluster = block = page 다 같은말이다)
UFS(unix file system)으로 버클리의 FFS에서 근간을 이루었고 Linux의 ext2에도 큰영향을 미침
(Linux-ext파일시스템 -> ext2 ->(일로 오면서 journaling이 추가됨 이거는 디스크 갑자기 끄면 망가지는것 방지위해 transaction기능 제공 즉 복구능력있음) ext3 
->(일로 오면서는 대용량 지원)ext4

cd-rom 파일 시스템
ISO 9660 이 레벨별로 발전
파일 이름을 지원하는데에서 차이점 있다.

*network file system (NFS)
컴퓨터 마다 디스크를 못두니까(비싸서) 중간에 큰거 하나두고 네트웍 연결해서 마치 자기의 local처럼 쓰게 제공 내 컴퓨터에 디스크가 있다는 환상 제공)
이게 지금의 클라우드로 발전
Sun Microsystems에서 만든거 이 회사는 대단한회사 workstation처음 만든것도 이회사이고 cpu를 RISC형식으로 만든회사도 이회사
java 만든 회사도 이회사인데 Oracle이라는 database만드는 회사로 넘아감 즉 이회사가 java,mySQL소유권 있다.

*virtual file system(VFS) 
SunOS 2.0(유닉스 사용)이 최초
이게 뭐냐? 파일시스템이 다달라서 여기 접근 방법도 다다르고 추가적으로 파일시스템을 도입하면 매번 수정했는데 이놈을 도입해서 음..약간
이게 알아서 맞는 파일시스템 찾아준다는 느낌 직접 그거에 맞는 함수를 안쓰고 open,close,read이런것만 쓰면 찾아준다는 느낌

운영체제에서 disk접근할땐 cluster단위접근(즉 메타데이터 부분은 파일시스템에 접근) 이렇게 섹터가 묶인 block별로 접근하다보니까 낭비되는 영역이생긴다.
따라서 cluster마다 크기가 다르다고 생각하면 될듯

!!!!!!!!!!!!!!!!!os안의 F/S이 meta data에 접근(접근은 cluster단위로)!!!!!!!!!!!!!!!!!!!!!!!!
디스크안에는 데이터와 메타데이터가 있는데 이렇게 잘 세팅하는데 이걸 디스크 format한다 한다 즉 data와 metadata를 구분

부가요소는 한번 읽어보기

하드디스크의 그림과 설명도 프린트보기
하드디스크가 주소를 부여할때 CHS(이놈은 주소범위 너무 작음)
오늘날은 LBA(logical block address)
2의48승까지 주소지정 가능 0,1,2,3처럼 순차적 숫자부여 값으로 주소지정한다.

